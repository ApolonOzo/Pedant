from collections import defaultdict  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º defaultdict –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

import gspread  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets
import phonenumbers  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
from phonenumbers import NumberParseException  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤

from telebot import types, TeleBot  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã –∏ –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Telegram –±–æ—Ç–æ–≤
from telebot.types import Message  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏

from email_validator import validate_email, EmailNotValidError  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email
from utils import get_correct_city_name, get_filial_cities
import config  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å —Ç–æ–∫–µ–Ω–∞–º–∏ –±–æ—Ç–∞ –∏ ID —Ç–∞–±–ª–∏—Ü—ã Google Sheets
from utils import get_credits  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
from bot_utils.anketa import Anketa  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –∞–Ω–∫–µ—Ç—ã
from bot_utils.user_status import UserStatus  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
BTN_RESTART = "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
BTN_SURVEY = "üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"
BTN_CANCEL = "–û—Ç–º–µ–Ω–∞"

# –ò—Å–ø–æ–ª—å–∑—É–µ–º defaultdict –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
ankets = defaultdict(Anketa)

# –ü–æ–ª—É—á–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –≤ Google Sheets
creds = get_credits()
client = gspread.authorize(creds)  # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
sheet = client.open_by_key(config.SPREADSHEET_ID).sheet1  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ ID
bot = TeleBot(config.TG_TOKEN)  # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–æ–º


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def welcome(message: Message):
    ankets[message.from_user.id].status = UserStatus.NEW_USER  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(BTN_SURVEY)  # –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"
    btn2 = types.KeyboardButton(BTN_RESTART)  # –ö–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    markup.add(btn1, btn2)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - {1.first_name}, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def loco(message: Message):
    if message.chat.type == 'private':  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ
        if message.text == BTN_RESTART:  # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
            welcome(message)  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∫–µ—Ç—É
        # elif message.text == BTN_SURVEY:
        #     bot.send_message(message.chat.id, "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É:", reply_markup=generate_anketa_markup())
        else:
            process_anketa(message)  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–Ω–∫–µ—Ç—É
        # else:
        #     bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å üò¢')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
def generate_anketa_markup():
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    markup.add(types.KeyboardButton(BTN_CANCEL))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
    return markup


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã "–î–∞/–ù–µ—Ç"
def generate_yes_no_markup():
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    markup.add(types.KeyboardButton('–î–∞'))  # –ö–Ω–æ–ø–∫–∞ "–î–∞"
    markup.add(types.KeyboardButton('–ù–µ—Ç'))  # –ö–Ω–æ–ø–∫–∞ "–ù–µ—Ç"
    return markup


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞"
@bot.message_handler(func=lambda message: message.text == BTN_CANCEL)
def cancel_anketa(message: Message):
    bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∞–Ω–∫–µ—Ç—ã
    welcome(message)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—é


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–Ω–∫–µ—Ç—ã
def process_anketa(message: Message):
    anketa = ankets[message.from_user.id]  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print(anketa)  # –ü–µ—á–∞—Ç–∞–µ–º –∞–Ω–∫–µ—Ç—É –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    match anketa.status:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤
        case UserStatus.NEW_USER:
            start_anketa(message)  # –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∫–µ—Ç—É
        case UserStatus.INPUT_NAME:
            input_name(message)  # –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏
        case UserStatus.INPUT_CITY:
            input_city(message)  # –ó–∞–ø—Ä–æ—Å –≥–æ—Ä–æ–¥–∞
        case UserStatus.INPUT_EMAIL:
            input_email(message)  # –ó–∞–ø—Ä–æ—Å email
        case UserStatus.INPUT_PHONE:
            input_phone(message)  # –ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        case UserStatus.INPUT_REPAIR_SKILLS:
            input_repair_skill(message)  # –ó–∞–ø—Ä–æ—Å –Ω–∞–≤—ã–∫–æ–≤ —Ä–µ–º–æ–Ω—Ç–∞
        case UserStatus.INPUT_CLIENT_SKILLS:
            input_client_skill(message)  # –ó–∞–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤
        case UserStatus.INPUT_SALARY:
            input_salary(message)  # –ó–∞–ø—Ä–æ—Å –∑–∞—Ä–ø–ª–∞—Ç—ã
        case UserStatus.FINISHED:
            bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")  # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        case _:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π
            ...


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∞–Ω–∫–µ—Ç—ã
def start_anketa(message: Message):
    anketa = ankets[message.from_user.id]  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    anketa.status = UserStatus.INPUT_NAME  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤–≤–æ–¥—É –∏–º–µ–Ω–∏
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–ò–û:")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –§–ò–û


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
def input_name(message: Message):
    anketa = ankets[message.from_user.id]  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    anketa.fio = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û
    if not anketa.fio:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–ò–û!")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –§–ò–û –∑–∞–Ω–æ–≤–æ
        return
    anketa.status = UserStatus.INPUT_CITY  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥:")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –≥–æ—Ä–æ–¥–∞
def input_city(message: Message):
    anketa = ankets[message.from_user.id]  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    city_input = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –≥–æ—Ä–æ–¥
    if not city_input:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥!")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥ –∑–∞–Ω–æ–≤–æ
        return

    corrected_city = get_correct_city_name(city_input)

    if corrected_city:
        anketa.city = corrected_city
        filial_cities = get_filial_cities()
        if corrected_city in get_filial_cities() or filial_cities is None:
            anketa.status = UserStatus.INPUT_EMAIL  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ email:")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email
        else:
            text = "–ù–∞—à–∏ —Ñ–∏–ª–∏–∞–ª—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö:\n\n‚Ä¢ "
            text += '\n‚Ä¢ '.join(sorted(get_filial_cities()))
            bot.send_message(message.chat.id, text)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email
    else:
        bot.send_message(message.chat.id, f"–ì–æ—Ä–æ–¥ '{city_input}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ email
def input_email(message: Message):
    anketa = ankets[message.from_user.id]  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        anketa.email = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º email
        if not anketa.email:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email!")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –∑–∞–Ω–æ–≤–æ
            return
        validate_email(anketa.email, check_deliverability=False)  # –í–∞–ª–∏–¥–∞—Ü–∏—è email
    except EmailNotValidError as e:  # –ï—Å–ª–∏ email –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
        bot.send_message(message.chat.id, f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email!")  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        return
    anketa.status = UserStatus.INPUT_PHONE  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def input_phone(message: Message):
    anketa = ankets[message.from_user.id]  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    anketa.phone = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if not anketa.phone:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä –∑–∞–Ω–æ–≤–æ
        return
    try:
        phone_parsed = phonenumbers.parse(anketa.phone, "RU")  # –ü–∞—Ä—Å–∏–º –Ω–æ–º–µ—Ä
        if not phonenumbers.is_valid_number(phone_parsed):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–æ–º–µ—Ä–∞
            raise NumberParseException  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π
    except Exception:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –Ω–æ–º–µ—Ä–∞
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!")  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        return
    anketa.status = UserStatus.INPUT_REPAIR_SKILLS  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
    bot.send_message(message.chat.id, "–£–º–µ–µ—Ç–µ —Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏–∫—É? –î–∞/–ù–µ—Ç",
                     reply_markup=generate_yes_no_markup())  # –ó–∞–ø—Ä–æ—Å –Ω–∞–≤—ã–∫–æ–≤ —Ä–µ–º–æ–Ω—Ç–∞


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –Ω–∞–≤—ã–∫–æ–≤ —Ä–µ–º–æ–Ω—Ç–∞
def input_repair_skill(message: Message):
    anketa = ankets[message.from_user.id]  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    anketa.repair_skill = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –æ –Ω–∞–≤—ã–∫–∞—Ö —Ä–µ–º–æ–Ω—Ç–∞
    if anketa.repair_skill not in ('–î–∞', '–ù–µ—Ç'):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        bot.send_message(message.chat.id, "–£–º–µ–µ—Ç–µ —Ä–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏–∫—É? –î–∞/–ù–µ—Ç",
                         reply_markup=generate_yes_no_markup())  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ
        return
    anketa.status = UserStatus.INPUT_CLIENT_SKILLS  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
    bot.send_message(message.chat.id, "–£–º–µ–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏? –î–∞/–ù–µ—Ç",
                     reply_markup=generate_yes_no_markup())  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤
def input_client_skill(message: Message):
    anketa = ankets[message.from_user.id]  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    anketa.clients_skill = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –æ –Ω–∞–≤—ã–∫–∞—Ö –æ–±—â–µ–Ω–∏—è
    if anketa.clients_skill not in ('–î–∞', '–ù–µ—Ç'):  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        bot.send_message(message.chat.id, "–£–º–µ–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏? –î–∞/–ù–µ—Ç",
                         reply_markup=generate_yes_no_markup())  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ
        return
    anketa.status = UserStatus.INPUT_SALARY  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –æ–∂–∏–¥–∞–µ–º—É—é –∑–∞—Ä–ø–ª–∞—Ç—É:")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –∑–∞—Ä–ø–ª–∞—Ç—ã
def input_salary(message: Message):
    anketa = ankets[message.from_user.id]  # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not message.text.strip().isdigit():  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∑–∞—Ä–ø–ª–∞—Ç—ã!")  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —á–∏—Å–ª–æ –∑–∞–Ω–æ–≤–æ
        return
    anketa.salary = int(message.text.strip())  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É
    anketa.status = UserStatus.FINISHED  # –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∫–µ—Ç—É
    bot.send_message(message.chat.id, "–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!")  # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    anketa.send(sheet, message.from_user.username)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É –≤ Google Sheets


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.polling(none_stop=True)
